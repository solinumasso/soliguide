# Soliguide: Useful information for those who need it
#
# SPDX-FileCopyrightText: Â© 2025 Solinum
#
# SPDX-License-Identifier: AGPL-3.0-only
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published
# by the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
name: Cron - Stop Qovery environments

on:
  schedule:
    - cron: 0 20 * * *

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  stop-qovery-instance-in-the-evening:
    name: Stop Qovery environments in the evening
    runs-on: ubuntu-latest
    env:
      QOVERY_ORGANIZATION_NAME: ${{ vars.QOVERY_ORGANIZATION_NAME }}
      QOVERY_PROJECT_NAME: ${{ vars.QOVERY_PROJECT_NAME }}
    permissions: {}
    steps:
      - name: Install Qovery CLI
        run: curl -s https://get.qovery.com | bash
      - name: Print debug information
        run: |
          echo "Organization name: $QOVERY_ORGANIZATION_NAME"
          echo "Project name: $QOVERY_PROJECT_NAME"
      - name: Get Qovery environment
        id: envs
        env:
          QOVERY_CLI_ACCESS_TOKEN: ${{ secrets.QOVERY_CLI_ACCESS_TOKEN }}
        run: |
          QOVERY_ENVIRONMENTS=$(qovery environment list \
            --organization "$QOVERY_ORGANIZATION_NAME" \
            --project "$QOVERY_PROJECT_NAME" \
            --environment "$QOVERY_BLUEPRINT_ENVIRONMENT_NAME" \
            QOVERY_ORGANIZATION_NAME \
            | jq -r '.[] | .name')

          echo "Environments found: $QOVERY_ENVIRONMENTS"

          echo "envs=$QOVERY_ENVIRONMENTS" >> "$GITHUB_OUTPUT"
      - name: Get PR Qovery environment
        id: pr_envs
        env:
          QOVERY_ENVIRONMENTS: ${{ steps.envs.outputs.envs }}
        continue-on-error: true
        run: |
          PR_ENVIRONMENTS=$(echo "$QOVERY_ENVIRONMENTS" | grep -e "^pr-")

          echo "PR environments found: $PR_ENVIRONMENTS"

          echo "envs=$PR_ENVIRONMENTS" >> "$GITHUB_OUTPUT"
      - name: Stop PR Qovery environments
        if: steps.pr_envs.outcome == 'success'
        env:
          QOVERY_CLI_ACCESS_TOKEN: ${{ secrets.QOVERY_CLI_ACCESS_TOKEN }}
          PR_ENVIRONMENTS: ${{ steps.pr_envs.outputs.envs }}
        run: |
          for env in $PR_ENVIRONMENTS; do
            qovery environment stop \
              --organization "$QOVERY_ORGANIZATION_NAME" \
              --project "$QOVERY_PROJECT_NAME" \
              --environment "$env"
          done
