{
  "enabled": true,
  "extends": [
    "config:js-app",
    "docker:enableMajor",
    ":docker",
    ":maintainLockFilesMonthly",
    ":masterIssue",
    ":preserveSemverRanges",
    ":semanticCommits",
    ":timezone(Europe/Paris)"
  ],
  "schedule": "every weekend",
  "masterIssueAutoclose": true,
  "prCreation": "not-pending",
  "prHourlyLimit": 0,
  "prConcurrentLimit": 0,
  "rangeStrategy": "pin",
  "dependencyDashboard": true,
  "dependencyDashboardTitle": "ðŸ“¦ Weekly dependency updates",
  "commitMessageExtra": "from {{currentVersion}} to {{newVersion}}",
  "semanticCommitType": "chore",
  "semanticCommitScope": "{{packageFileDir}}",
  "commitBody": "Automated update by Renovate",
  "baseBranches": ["main"],
  "major": {
    "enabled": false
  },
  "patch": {
    "enabled": false
  },
  "pin": {
    "enabled": false
  },
  "digest": {
    "enabled": false
  },
  "packageRules": [
    {
      "matchPaths": ["packages/api/**"],
      "semanticCommitScope": "api",
      "groupName": "api dependencies",
      "schedule": ["every weekend"],
      "updateTypes": ["minor"]
    },
    {
      "matchPaths": ["packages/common/**"],
      "semanticCommitScope": "common",
      "groupName": "common dependencies",
      "schedule": ["every weekend"],
      "updateTypes": ["minor"]
    },
    {
      "matchPaths": ["packages/common-angular/**"],
      "semanticCommitScope": "common-angular",
      "groupName": "common-angular dependencies",
      "schedule": ["every weekend"],
      "updateTypes": ["minor"]
    },
    {
      "matchPaths": ["packages/design-system/**"],
      "semanticCommitScope": "design-system",
      "groupName": "design-system dependencies",
      "schedule": ["every weekend"],
      "updateTypes": ["minor"]
    },
    {
      "matchPaths": ["packages/frontend/**"],
      "semanticCommitScope": "frontend",
      "groupName": "frontend dependencies",
      "schedule": ["every weekend"],
      "updateTypes": ["minor"]
    },
    {
      "matchPaths": ["packages/location-api/**"],
      "semanticCommitScope": "location-api",
      "groupName": "location-api dependencies",
      "schedule": ["every weekend"],
      "updateTypes": ["minor"]
    },
    {
      "matchPaths": ["packages/maintenance/**"],
      "semanticCommitScope": "maintenance",
      "groupName": "maintenance dependencies",
      "schedule": ["every weekend"],
      "updateTypes": ["minor"]
    },
    {
      "matchPaths": ["packages/soligare/**"],
      "semanticCommitScope": "soligare",
      "groupName": "soligare dependencies",
      "schedule": ["every weekend"],
      "updateTypes": ["minor"]
    },
    {
      "matchPaths": ["packages/web-app/**"],
      "semanticCommitScope": "web-app",
      "groupName": "web-app dependencies",
      "schedule": ["every weekend"],
      "updateTypes": ["minor"]
    },
    {
      "matchManagers": ["docker"],
      "semanticCommitScope": "docker",
      "groupName": "Docker",
      "schedule": ["every weekend"],
      "updateTypes": ["minor", "patch"]
    },
    {
      "matchManagers": ["github-actions"],
      "semanticCommitScope": "github",
      "groupName": "GitHub Actions",
      "schedule": ["every weekend"],
      "updateTypes": ["minor", "patch"]
    },
    {
      "matchDepTypes": ["engines"],
      "matchPackageNames": ["node"],
      "semanticCommitScope": "node",
      "groupName": "Node.js",
      "schedule": ["every weekend"],
      "updateTypes": ["minor", "patch"]
    },
    {
      "matchDepTypes": ["devDependencies", "resolutions"],
      "matchPaths": ["package.json"],
      "matchPackagePatterns": [
        "^yarn$",
        "^lerna$",
        "^nx$",
        "^@commitlint",
        "^husky$",
        "^lint-staged$",
        "^semantic-release",
        "^license-check-and-add$"
      ],
      "semanticCommitScope": "monorepo",
      "groupName": "Monorepo core tools",
      "schedule": ["every weekend"],
      "updateTypes": ["minor", "patch"]
    },
    {
      "matchCategories": ["security"],
      "prPriority": 1,
      "semanticCommitType": "fix",
      "enabled": true
    }
  ]
}
